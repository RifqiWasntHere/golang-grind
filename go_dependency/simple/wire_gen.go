// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package simple

import (
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializeService(isError bool) (*SimpleService, error) {
	simpleRepository := NewSimpleRepository(isError)
	simpleService, err := NewSimpleService(simpleRepository)
	if err != nil {
		return nil, err
	}
	return simpleService, nil
}

// Multiple binding
func InitializeDatabase() *DatabaseRepository {
	databasePostgreSQL := NewDatabasePostgreSQL()
	databaseMongoDB := NewDatabaseMongoDB()
	databaseRepository := NewDatabaseRepository(databasePostgreSQL, databaseMongoDB)
	return databaseRepository
}

func InitializeFooBarService() *FooBarService {
	fooRepository := NewFooRepository()
	fooService := NewFooService(fooRepository)
	barRepository := NewBarRepository()
	barService := NewBarService(barRepository)
	fooBarService := NewFooBarService(fooService, barService)
	return fooBarService
}

func InitializeSayHelloService() *SayHelloService {
	sayHelloImpl := NewSayHelloImpl()
	sayHelloService := NewSayHelloService(sayHelloImpl)
	return sayHelloService
}

func InitializeFooBarStruct() *FooBarService {
	fooRepository := NewFooRepository()
	fooService := NewFooService(fooRepository)
	barRepository := NewBarRepository()
	barService := NewBarService(barRepository)
	fooBarService := &FooBarService{
		FooService: fooService,
		BarService: barService,
	}
	return fooBarService
}

func InitializeFoobarStructWithValues() *FooBarService {
	fooService := _wireFooServiceValue
	barService := _wireBarServiceValue
	fooBarService := &FooBarService{
		FooService: fooService,
		BarService: barService,
	}
	return fooBarService
}

var (
	_wireFooServiceValue = fooValue
	_wireBarServiceValue = barValue
)

// Struct field provider
func InitializeStructFieldProvider() *Configuration {
	application := NewApplication()
	configuration := application.Configuration
	return configuration
}

// Cleanup function
func InitializeCleanUpFunction(name string) (*Connection, func()) {
	file, cleanup := NewFile(name)
	connection, cleanup2 := NewConnection(file)
	return connection, func() {
		cleanup2()
		cleanup()
	}
}

// injector.go:

// Provider set
var fooSet = wire.NewSet(NewFooRepository, NewFooService)

var barSet = wire.NewSet(NewBarRepository, NewBarService)

var fooBarSet = wire.NewSet(NewFooBarService)

// Binding Interface
// SayHello sets
var helloSet = wire.NewSet(
	NewSayHelloImpl, wire.Bind(new(SayHello), new(*SayHelloImpl)),
)

// Struct Provider
var fooSet2 = wire.NewSet(NewFooRepository, NewFooService)

var barSet2 = wire.NewSet(NewBarRepository, NewBarService)

var fooValue = &FooService{}

var barValue = &BarService{}
